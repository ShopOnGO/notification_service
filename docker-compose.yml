version: "3.8"

services:
  notification_container:
    container_name: notification_container
    build: ./
    command: ./wait-for-db.sh ./notification_service
    env_file:
      - .env
    environment:
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - KAFKA_NOTIFY_TOPIC=${KAFKA_NOTIFY_TOPIC}
      - KAFKA_NOTIFY_CONSUMER=${KAFKA_NOTIFY_CONSUMER}
      - KAFKA_SMTP_CONSUMER=${KAFKA_SMTP_CONSUMER}
      - KAFKA_NOTIFICATION_TOPICS=${KAFKA_NOTIFICATION_TOPICS}
      - NOTIFICATION_SERVICE_LOG_LEVEL=${NOTIFICATION_SERVICE_LOG_LEVEL}
      - NOTIFICATION_SERVICE_FILE_LOG_LEVEL=${NOTIFICATION_SERVICE_FILE_LOG_LEVEL}


      - MONGO_URI=${MONGO_URI}
      - MONGO_DB=${MONGO_DB}


      - SMTP_NAME=${SMTP_NAME}
      - SMTP_FROM=${SMTP_FROM}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}

    networks:
      - shopongo_default
    ports:
      - "8079:8079"
    depends_on:
      - mongo

  mongo:
    image: mongo:6.0
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - mongo_data:/data/db
    networks:
      - shopongo_default
    ports:
      - "27017:27017"

networks:
  shopongo_default:
    external: true

volumes:
  mongo_data:
